[{"C:\\code\\civly\\src\\index.tsx":"1","C:\\code\\civly\\src\\reportWebVitals.ts":"2","C:\\code\\civly\\src\\serviceWorkerRegistration.ts":"3","C:\\code\\civly\\src\\App.tsx":"4","C:\\code\\civly\\src\\components\\index.ts":"5","C:\\code\\civly\\src\\components\\member.tsx":"6","C:\\code\\civly\\src\\components\\congresspeople-via-propublica.tsx":"7","C:\\code\\phasekeeper-pwa\\src\\index.tsx":"8","C:\\code\\phasekeeper-pwa\\src\\serviceWorkerRegistration.ts":"9","C:\\code\\phasekeeper-pwa\\src\\reportWebVitals.ts":"10","C:\\code\\phasekeeper-pwa\\src\\App.tsx":"11","C:\\code\\phasekeeper-pwa\\src\\state\\EngineContext.tsx":"12","C:\\code\\phasekeeper-pwa\\src\\components\\Game.tsx":"13","C:\\code\\phasekeeper-pwa\\src\\state\\actions.ts":"14","C:\\code\\phasekeeper-pwa\\src\\state\\reducer.ts":"15"},{"size":818,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":5256,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":418,"mtime":1611636854085,"results":"20","hashOfConfig":"17"},{"size":74,"mtime":1611636846280,"results":"21","hashOfConfig":"17"},{"size":437,"mtime":1611636743925,"results":"22","hashOfConfig":"17"},{"size":1276,"mtime":1611636944456,"results":"23","hashOfConfig":"17"},{"size":818,"mtime":1634003986372,"results":"24","hashOfConfig":"25"},{"size":5256,"mtime":1634003986331,"results":"26","hashOfConfig":"25"},{"size":425,"mtime":1634003986313,"results":"27","hashOfConfig":"25"},{"size":504,"mtime":1634007305412,"results":"28","hashOfConfig":"25"},{"size":1100,"mtime":1634008084365,"results":"29","hashOfConfig":"25"},{"size":1932,"mtime":1634008230482,"results":"30","hashOfConfig":"25"},{"size":996,"mtime":1634006987762,"results":"31","hashOfConfig":"25"},{"size":1927,"mtime":1634008281175,"results":"32","hashOfConfig":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"keqamh",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"1mutci",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"49"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"C:\\code\\civly\\src\\index.tsx",[],"C:\\code\\civly\\src\\reportWebVitals.ts",[],"C:\\code\\civly\\src\\serviceWorkerRegistration.ts",[],"C:\\code\\civly\\src\\App.tsx",["65","66"],"C:\\code\\civly\\src\\components\\index.ts",[],"C:\\code\\civly\\src\\components\\member.tsx",[],"C:\\code\\civly\\src\\components\\congresspeople-via-propublica.tsx",[],"C:\\code\\phasekeeper-pwa\\src\\index.tsx",[],["67","68"],"C:\\code\\phasekeeper-pwa\\src\\serviceWorkerRegistration.ts",[],"C:\\code\\phasekeeper-pwa\\src\\reportWebVitals.ts",[],"C:\\code\\phasekeeper-pwa\\src\\App.tsx",[],"C:\\code\\phasekeeper-pwa\\src\\state\\EngineContext.tsx",[],"C:\\code\\phasekeeper-pwa\\src\\components\\Game.tsx",["69"],"import React, { useContext } from 'react';\r\nimport { EngineContext } from '../state/EngineContext';\r\n\r\nexport const GameSetup: React.FC = () => {\r\n    const [state, actions] = useContext(EngineContext);\r\n    \r\n    return (\r\n        <div>\r\n            {state.players.map(p => <div>A player {p.playerId}</div>)}\r\n            <div onClick={e => { actions?.addPlayer()}}>TODO: UI to add players (for now, click here to simulate)</div>\r\n            <div onClick={e => { actions?.start()}}>Start the round!</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RoundInProgress: React.FC = () => {\r\n    const [state, actions] = useContext(EngineContext);\r\n\r\n    return (\r\n        <div>\r\n            {state.players.map(p => (<div>Player {p.playerId} has completed Phase {p.completedPhase}</div>))}\r\n            <div onClick={e => {actions?.endRound()}}>TODO: Round in progress, render current player phases (for now, click here to end round)</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RoundScoring: React.FC = () => {\r\n    const [state, actions] = useContext(EngineContext);\r\n    return <div onClick={e => {\r\n        state.players.forEach(p => actions?.adjustPhase(p.playerId, 1));\r\n        actions?.commitScores();\r\n    }}>TODO: UI to enter score and phase adjustments (for now, click here to move everyone up a phase and start next round)</div>\r\n}\r\n\r\nexport const GameComplete: React.FC = () => {\r\n    const [state, actions] = useContext(EngineContext);\r\n    return <div onClick={e => {actions?.reset()}}>TODO: UI for end screen (for now, click here to reset the game)</div>\r\n}\r\n\r\nexport const Game:React.FC = () => {\r\n    const [state] = useContext(EngineContext);\r\n\r\n    switch(state.gameState) {\r\n        case 'init':\r\n            return <GameSetup />;\r\n        case 'active':\r\n            return state.isRoundInProgress ? <RoundInProgress /> : <RoundScoring />;\r\n        case 'complete':\r\n            return <GameComplete />;\r\n    }\r\n}","C:\\code\\phasekeeper-pwa\\src\\state\\actions.ts",[],"C:\\code\\phasekeeper-pwa\\src\\state\\reducer.ts",[],{"ruleId":"70","severity":1,"message":"71","line":1,"column":17,"nodeType":"72","messageId":"73","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"74","line":1,"column":28,"nodeType":"72","messageId":"73","endLine":1,"endColumn":36},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"70","severity":1,"message":"79","line":36,"column":12,"nodeType":"72","messageId":"73","endLine":36,"endColumn":17},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'state' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]