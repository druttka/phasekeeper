{"version":3,"sources":["state/models.ts","state/reducer.ts","state/EngineContext.tsx","state/actions.ts","components/EndScreen.tsx","components/GameSetup.tsx","components/RoundInProgress.tsx","components/Scoring.tsx","components/Game.tsx","App.tsx","reportWebVitals.ts","serviceWorkerRegistration.ts","index.tsx"],"names":["LocalStorageKeyForSavedState","standardPhases","goals","goalType","successThreshold","reducerFns","addPlayer","state","action","type","players","completedPhase","lastCommittedScore","stagedScoreAdjustment","playerId","length","name","data","adjustPhase","adjustment","nextPlayers","map","p","commitScores","isGameOver","some","gameState","isRoundInProgress","adjustStagedScoring","discardStagedScoreAdustments","endRound","removePlayer","filter","reset","hasGameStarted","phasesView","restoreSavedState","savedState","localStorage","getItem","JSON","parse","saveGameState","setItem","stringify","clearSavedState","removeItem","start","engineReducer","fn","defaultEngineState","EngineContext","createContext","undefined","EngineProvider","children","initialState","reducer","useReducer","actions","dispatch","saveState","createActions","Provider","value","EndScreen","useContext","useEffect","sortedPlayers","sort","a","b","winner","style","marginTop","onClick","e","Roster","useState","playerName","setPlayerName","anyPlayersDefined","className","placeholder","onChange","target","onKeyPress","key","GameSetup","hasAtLeastTwoPlayers","hasSavedState","href","rel","disabled","PhaseCard","phase","phaseIndex","phaseView","doesPhaseHavePlayers","goalText","reduce","agg","goal","nextGoal","RoundInProgress","playersByPhase","targetPhase","divs","phaseDefinition","ScoreSlider","label","rangeValue","setRangeValueCb","min","max","step","ScoreCard","player","fives","setFives","tens","setTens","skips","setSkips","wilds","setWilds","setCompletedPhase","trueAdjustment","checkboxId","htmlFor","id","checked","x","Scoring","Game","scene","App","display","flexDirection","alignItems","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e3ecb492.chunk.js","sourcesContent":["export const LocalStorageKeyForSavedState = \"stored-game\";\n\nexport interface PlayerState {\n  name?: string;\n  playerId: number;\n  completedPhase: number;\n  lastCommittedScore: number;\n  stagedScoreAdjustment: number;\n}\n\nexport type GameState = \"init\" | \"active\" | \"complete\";\n\nexport type GameAction =\n  | { type: \"addPlayer\"; data: { name?: string } }\n  | { type: \"start\" }\n  | { type: \"endRound\" }\n  | { type: \"adjustPhase\"; data: { playerId: number; adjustment: 1 | -1 } }\n  | {\n      type: \"adjustStagedScoring\";\n      data: { playerId: number; adjustment: number };\n    }\n  | { type: \"discardStagedScoreAdustments\"; data: { playerId: number } }\n  | { type: \"commitScores\" }\n  | { type: \"removePlayer\"; data: { playerId: number } }\n  | { type: \"saveGameState\" }\n  | { type: \"restoreSavedState\" }\n  | { type: \"clearSavedState\" }\n  | { type: \"reset\" };\n\nexport interface EngineState {\n  gameState: GameState;\n  players: PlayerState[];\n  hasGameStarted: boolean;\n  isRoundInProgress: boolean;\n  phasesView: \"all\" | \"active\";\n}\n\nexport type GoalType = \"set\" | \"run\" | \"color-match\";\nexport interface GoalDefintion {\n  goalType: GoalType;\n  successThreshold: number;\n}\n\nexport interface PhaseDefintion {\n  goals: GoalDefintion[];\n}\n\nexport const standardPhases: PhaseDefintion[] = [\n  {\n    goals: [\n      { goalType: \"set\", successThreshold: 3 },\n      { goalType: \"set\", successThreshold: 3 },\n    ],\n  },\n  {\n    goals: [\n      { goalType: \"set\", successThreshold: 3 },\n      { goalType: \"run\", successThreshold: 4 },\n    ],\n  },\n  {\n    goals: [\n      { goalType: \"set\", successThreshold: 4 },\n      { goalType: \"run\", successThreshold: 4 },\n    ],\n  },\n  { goals: [{ goalType: \"run\", successThreshold: 7 }] },\n  { goals: [{ goalType: \"run\", successThreshold: 8 }] },\n  { goals: [{ goalType: \"run\", successThreshold: 9 }] },\n  {\n    goals: [\n      { goalType: \"set\", successThreshold: 4 },\n      { goalType: \"set\", successThreshold: 4 },\n    ],\n  },\n  { goals: [{ goalType: \"color-match\", successThreshold: 7 }] },\n  {\n    goals: [\n      { goalType: \"set\", successThreshold: 5 },\n      { goalType: \"set\", successThreshold: 2 },\n    ],\n  },\n  {\n    goals: [\n      { goalType: \"set\", successThreshold: 5 },\n      { goalType: \"set\", successThreshold: 3 },\n    ],\n  },\n];\n","import {\r\n  EngineState,\r\n  GameAction,\r\n  LocalStorageKeyForSavedState,\r\n} from \"./models\";\r\n\r\ntype EngineReducer = (state: EngineState, action: GameAction) => EngineState;\r\n\r\nconst addPlayer: EngineReducer = (state, action) => {\r\n  if (action.type !== \"addPlayer\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  return {\r\n    ...state,\r\n    players: [\r\n      ...players,\r\n      {\r\n        completedPhase: 0,\r\n        lastCommittedScore: 0,\r\n        stagedScoreAdjustment: 0,\r\n        playerId: players.length,\r\n        name: action.data.name,\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nconst start: EngineReducer = (state, action) => {\r\n  if (action.type !== \"start\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  return {\r\n    ...state,\r\n    gameState: \"active\",\r\n    hasGameStarted: true,\r\n    isRoundInProgress: true,\r\n    players: players.map((p) => ({\r\n      ...p,\r\n      completedPhase: 0,\r\n      lastCommittedScore: 0,\r\n      stagedScoreAdjustment: 0,\r\n    })),\r\n  };\r\n};\r\n\r\nconst removePlayer: EngineReducer = (state, action) => {\r\n  if (action.type !== \"removePlayer\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  return {\r\n    ...state,\r\n    players: players.filter((p) => p.playerId !== action.data.playerId),\r\n  };\r\n};\r\n\r\nconst endRound: EngineReducer = (state) => {\r\n  return {\r\n    ...state,\r\n    isRoundInProgress: false,\r\n  };\r\n};\r\n\r\nconst adjustPhase: EngineReducer = (state, action) => {\r\n  if (action.type !== \"adjustPhase\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  const { adjustment, playerId } = action.data;\r\n  const nextPlayers = players.map((p) =>\r\n    p.playerId !== playerId\r\n      ? p\r\n      : { ...p, completedPhase: p.completedPhase + adjustment }\r\n  );\r\n\r\n  return {\r\n    ...state,\r\n    players: nextPlayers,\r\n  };\r\n};\r\n\r\nconst adjustStagedScoring: EngineReducer = (state, action) => {\r\n  if (action.type !== \"adjustStagedScoring\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  const { adjustment, playerId } = action.data;\r\n  return {\r\n    ...state,\r\n    players: players.map((p) =>\r\n      p.playerId === playerId\r\n        ? {\r\n            ...p,\r\n            stagedScoreAdjustment: p.stagedScoreAdjustment + adjustment,\r\n          }\r\n        : p\r\n    ),\r\n  };\r\n};\r\n\r\nconst discardStagedScoreAdustments: EngineReducer = (state, action) => {\r\n  if (action.type !== \"discardStagedScoreAdustments\") return state;\r\n\r\n  const { players } = state;\r\n  const { playerId } = action.data;\r\n\r\n  return {\r\n    ...state,\r\n    players: players.map((p) =>\r\n      p.playerId === playerId ? { ...p, stagedScoreAdjustment: 0 } : p\r\n    ),\r\n  };\r\n};\r\nconst commitScores: EngineReducer = (state, action) => {\r\n  if (action.type !== \"commitScores\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  const isGameOver = players.some((p) => p.completedPhase >= 10);\r\n  const nextPlayers = players.map((p) => ({\r\n    ...p,\r\n    lastCommittedScore: p.lastCommittedScore + p.stagedScoreAdjustment,\r\n    stagedScoreAdjustment: 0,\r\n  }));\r\n\r\n  return isGameOver\r\n    ? {\r\n        ...state,\r\n        gameState: \"complete\",\r\n        players: nextPlayers,\r\n      }\r\n    : {\r\n        ...state,\r\n        isRoundInProgress: true,\r\n        players: nextPlayers,\r\n      };\r\n};\r\n\r\nconst reset: EngineReducer = (state, action) => {\r\n  if (action.type !== \"reset\") return state;\r\n\r\n  const { players } = state;\r\n\r\n  return {\r\n    gameState: \"init\",\r\n    hasGameStarted: false,\r\n    isRoundInProgress: false,\r\n    players: players,\r\n    phasesView: state.phasesView,\r\n  };\r\n};\r\n\r\nconst restoreSavedState: EngineReducer = (state, action) => {\r\n  if (action.type !== \"restoreSavedState\") return state;\r\n\r\n  const savedState = localStorage.getItem(LocalStorageKeyForSavedState);\r\n  return savedState ? JSON.parse(savedState) : state;\r\n};\r\n\r\nconst saveGameState: EngineReducer = (state, action) => {\r\n  if (action.type !== \"saveGameState\") return state;\r\n\r\n  localStorage.setItem(LocalStorageKeyForSavedState, JSON.stringify(state));\r\n  return state;\r\n};\r\n\r\nconst clearSavedState: EngineReducer = (state, action) => {\r\n  if (action.type !== \"clearSavedState\") return state;\r\n  localStorage.removeItem(LocalStorageKeyForSavedState);\r\n  return state;\r\n};\r\n\r\nconst reducerFns: Record<GameAction[\"type\"], EngineReducer> = {\r\n  addPlayer: addPlayer,\r\n  adjustPhase: adjustPhase,\r\n  commitScores: commitScores,\r\n  adjustStagedScoring: adjustStagedScoring,\r\n  discardStagedScoreAdustments: discardStagedScoreAdustments,\r\n  endRound: endRound,\r\n  removePlayer: removePlayer,\r\n  reset: reset,\r\n  restoreSavedState: restoreSavedState,\r\n  saveGameState: saveGameState,\r\n  clearSavedState: clearSavedState,\r\n  start: start,\r\n};\r\n\r\nexport const engineReducer = (\r\n  state: EngineState,\r\n  action: GameAction\r\n): EngineState => {\r\n  const fn = reducerFns[action.type];\r\n  return fn ? fn(state, action) : state;\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nimport { createActions } from \"./actions\";\r\nimport { EngineState } from \"./models\";\r\nimport { engineReducer } from \"./reducer\";\r\n\r\nconst defaultEngineState: EngineState = {\r\n  gameState: \"init\",\r\n  players: [],\r\n  hasGameStarted: false,\r\n  isRoundInProgress: false,\r\n  phasesView: \"active\",\r\n};\r\n\r\nexport const EngineContext = createContext<\r\n  [EngineState, ReturnType<typeof createActions>?]\r\n>([defaultEngineState, undefined]);\r\n\r\nexport interface EngineProviderProps {\r\n  initialState?: EngineState;\r\n  reducer?: typeof engineReducer;\r\n}\r\n\r\nexport const EngineProvider: React.FC<EngineProviderProps> = ({\r\n  children,\r\n  initialState = defaultEngineState,\r\n  reducer = engineReducer,\r\n}) => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const actions = createActions(dispatch);\r\n\r\n  return (\r\n    <EngineContext.Provider value={[state, actions]}>\r\n      {children}\r\n    </EngineContext.Provider>\r\n  );\r\n};\r\n","import { Dispatch } from \"react\";\n\nimport { GameAction } from \"./models\";\n\nexport const createActions = (dispatch: Dispatch<GameAction>) => {\n  return {\n    addPlayer: (name?: string) =>\n      dispatch({ type: \"addPlayer\", data: { name } }),\n    start: () => dispatch({ type: \"start\" }),\n    endRound: () => dispatch({ type: \"endRound\" }),\n    adjustPhase: (playerId: number, adjustment: 1 | -1) =>\n      dispatch({ type: \"adjustPhase\", data: { playerId, adjustment } }),\n    adjustStagedScoring: (playerId: number, adjustment: number) =>\n      dispatch({ type: \"adjustStagedScoring\", data: { playerId, adjustment } }),\n    discardStagedScoreAdustments: (playerId: number) =>\n      dispatch({ type: \"discardStagedScoreAdustments\", data: { playerId } }),\n    commitScores: () => dispatch({ type: \"commitScores\" }),\n    reset: () => dispatch({ type: \"reset\" }),\n    removePlayer: (playerId: number) =>\n      dispatch({ type: \"removePlayer\", data: { playerId } }),\n    saveState: () => dispatch({ type: \"saveGameState\" }),\n    clearSavedState: () => dispatch({ type: \"clearSavedState\" }),\n    restoreSavedState: () => dispatch({ type: \"restoreSavedState\" }),\n  };\n};\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { EngineContext } from \"../state/EngineContext\";\r\n\r\nexport const EndScreen: React.FC = () => {\r\n  const [{ players }, actions] = useContext(EngineContext);\r\n\r\n  useEffect(() => {\r\n    actions?.clearSavedState();\r\n  }, [actions]);\r\n\r\n  if (players.length < 1) {\r\n    return (\r\n      <div data-testid=\"error-view\">\r\n        <h1>\r\n          Whoops. Looks like we got here without any players... Where'd\r\n          everybody go?\r\n        </h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const sortedPlayers = players.sort((a, b) => {\r\n    if (a.completedPhase > b.completedPhase) return -1;\r\n    if (b.completedPhase > a.completedPhase) return 1;\r\n    return a.lastCommittedScore - b.lastCommittedScore;\r\n  });\r\n\r\n  const winner = sortedPlayers[0];\r\n\r\n  return (\r\n    <div>\r\n      <h1 data-testid=\"text-congrats\">\r\n        Congratulations {winner.name || `Player ${winner.playerId}`}!\r\n      </h1>\r\n      {sortedPlayers.map((p) => (\r\n        <div\r\n          key={`player-outcome-${p.playerId}`}\r\n          data-testid=\"text-player-outcome\"\r\n        >\r\n          {p.name || `Player ${p.playerId}`} completed Phase {p.completedPhase}{\" \"}\r\n          with {p.lastCommittedScore} points.\r\n        </div>\r\n      ))}\r\n      <button\r\n        style={{ marginTop: 10 }}\r\n        onClick={(e) => {\r\n          actions?.reset();\r\n        }}\r\n      >\r\n        Play again!\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext, useState } from \"react\";\n\nimport { LocalStorageKeyForSavedState } from \"../state\";\nimport { EngineContext } from \"../state/EngineContext\";\n\nconst Roster: React.FC = () => {\n  const [{ players }, actions] = useContext(EngineContext);\n  const [playerName, setPlayerName] = useState<string>(\"\");\n\n  const anyPlayersDefined = players && players.length > 0;\n\n  return (\n    <div className=\"Roster-container\">\n      <div className=\"Roster-heading\">Players:</div>\n\n      {anyPlayersDefined && (\n        <div className=\"Roster-players\">\n          {players.map((p) => (\n            <div className=\"Roster-player\" key={`player-${p.playerId}`}>\n              {p.name || p.playerId}\n              <span\n                className=\"Roster-remove\"\n                onClick={(e) => {\n                  actions?.removePlayer(p.playerId);\n                }}\n              >\n                X\n              </span>\n            </div>\n          ))}\n        </div>\n      )}\n\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"new player\"\n          value={playerName}\n          aria-label=\"Player Name\"\n          onChange={(e) => {\n            setPlayerName(e?.target?.value);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              actions?.addPlayer(playerName);\n              setPlayerName(\"\");\n            }\n          }}\n        ></input>\n      </div>\n    </div>\n  );\n};\n\nexport const GameSetup: React.FC = () => {\n  const [{ players }, actions] = useContext(EngineContext);\n\n  const hasAtLeastTwoPlayers = players && players.length > 1;\n  const hasSavedState = !!localStorage.getItem(LocalStorageKeyForSavedState);\n\n  return (\n    <div>\n      <div className=\"Game-setup-instruction\">\n        Tired of pen and paper? Let Phasekeeper track your game of{\" \"}\n        <a\n          href=\"https://www.mattelgames.com/en-us/cards/phase-10\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Phase 10\n        </a>\n        !\n      </div>\n      <div className=\"Game-setup-instruction\">\n        To get started, let's add your players.\n      </div>\n      <Roster />\n      <button\n        disabled={!hasAtLeastTwoPlayers}\n        onClick={(e) => {\n          actions?.clearSavedState();\n          actions?.start();\n        }}\n      >\n        Let's play!\n      </button>\n      <button\n        disabled={!hasSavedState}\n        onClick={(e) => {\n          actions?.restoreSavedState();\n        }}\n      >\n        Resume\n      </button>\n      <div className=\"Game-setup-instruction\">\n        Wish this site was an app you could use offline? Try \"Add to Home\n        Screen\"!\n      </div>\n      <div className=\"Game-setup-instruction\">\n        For more details, see these instructions for{\" \"}\n        <a\n          href=\"https://support.google.com/chrome/answer/9658361?hl=en&co=GENIE.Platform%3DAndroid\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Chrome\n        </a>\n        ,{\" \"}\n        <a\n          href=\"https://www.howtogeek.com/667910/how-to-add-a-website-to-your-iphone-or-ipad-home-screen/\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Safari\n        </a>\n        , and{\" \"}\n        <a\n          href=\"https://developer.mozilla.org/en-US/docs/Web/Progressive_web_apps/Installable_PWAs\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Firefox\n        </a>\n        .\n      </div>\n    </div>\n  );\n};\n","import React, { useContext } from \"react\";\n\nimport { PhaseDefintion, PlayerState, standardPhases } from \"../state\";\nimport { EngineContext } from \"../state/EngineContext\";\n\ninterface PhaseCardProps {\n  phase: PhaseDefintion;\n  phaseIndex: number;\n  players: PlayerState[];\n  phaseView: \"all\" | \"active\";\n}\n\nconst PhaseCard: React.FC<PhaseCardProps> = ({\n  phase,\n  phaseIndex,\n  players,\n  phaseView,\n}) => {\n  const doesPhaseHavePlayers = players && players.length > 0;\n\n  if (phaseView === \"active\" && !doesPhaseHavePlayers) {\n    return null;\n  }\n\n  const goalText = phase.goals.reduce((agg, goal) => {\n    const nextGoal = `a ${goal.goalType} of ${goal.successThreshold}`;\n    return agg ? agg + ` and ${nextGoal}` : `${nextGoal}`;\n  }, \"\");\n\n  return (\n    <div className=\"PhaseCard-container\">\n      <span className=\"RoundInProgress-phase-indicator\">{phaseIndex + 1}</span>\n      <div className=\"PhaseCard-players\">\n        {players.map((p) => (\n          <span\n            key={`PhaseCard-player-${p.playerId}`}\n            className=\"PhaseCard-player\"\n          >\n            {p.name || `Player ${p.playerId}`} ({p.lastCommittedScore})\n          </span>\n        ))}\n      </div>\n      <div className=\"PhaseCard-goal\">{goalText}</div>\n    </div>\n  );\n};\n\nexport const RoundInProgress: React.FC = () => {\n  const [{ players, phasesView }, actions] = useContext(EngineContext);\n\n  const playersByPhase = players.reduce<Record<number, PlayerState[]>>(\n    (agg, p) => {\n      const targetPhase = p.completedPhase;\n      const nextPlayers = [...(agg[targetPhase] || []), p];\n\n      return {\n        ...agg,\n        [targetPhase]: nextPlayers,\n      };\n    },\n    {}\n  );\n\n  const divs = standardPhases.map((phaseDefinition, phaseIndex) => {\n    return (\n      <PhaseCard\n        key={`phaseCard-${phaseIndex}`}\n        phase={phaseDefinition}\n        phaseIndex={phaseIndex}\n        phaseView={phasesView}\n        players={playersByPhase[phaseIndex]}\n      ></PhaseCard>\n    );\n  });\n\n  return (\n    <div>\n      {divs}\n      <button\n        style={{ marginTop: 10 }}\n        className=\"action-button\"\n        onClick={(e) => {\n          actions?.endRound();\n        }}\n      >\n        Next Phase\n      </button>\n    </div>\n  );\n};\n","import React, {\r\n  Dispatch,\r\n  SetStateAction,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\nimport { PlayerState } from \"../state\";\r\nimport { EngineContext } from \"../state/EngineContext\";\r\n\r\ninterface ScoreCardProps {\r\n  player: PlayerState;\r\n}\r\n\r\ninterface ScoreSliderProps {\r\n  label: string;\r\n  rangeValue: number;\r\n  setRangeValueCb: Dispatch<SetStateAction<number>>;\r\n}\r\n\r\nconst ScoreSlider: React.FC<ScoreSliderProps> = ({\r\n  label,\r\n  rangeValue,\r\n  setRangeValueCb,\r\n}) => {\r\n  return (\r\n    <div className=\"ScoreCard-slider\">\r\n      <span>{label}</span>\r\n      <div>\r\n        <input\r\n          className=\"ScoreCard-range\"\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"10\"\r\n          step=\"1\"\r\n          onChange={(e) => {\r\n            setRangeValueCb(+e.target.value);\r\n          }}\r\n          value={rangeValue}\r\n        />\r\n        <span>{rangeValue}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ScoreCard: React.FC<ScoreCardProps> = ({ player }) => {\r\n  const [, actions] = useContext(EngineContext);\r\n\r\n  const [fives, setFives] = useState(0);\r\n  const [tens, setTens] = useState(0);\r\n  const [skips, setSkips] = useState(0);\r\n  const [wilds, setWilds] = useState(0);\r\n  const [completedPhase, setCompletedPhase] = useState(false);\r\n  const { name, playerId, stagedScoreAdjustment } = player;\r\n\r\n  useEffect(() => {\r\n    const trueAdjustment = fives * 5 + tens * 10 + skips * 25 + wilds * 50;\r\n    actions?.adjustStagedScoring(\r\n      playerId,\r\n      trueAdjustment - stagedScoreAdjustment\r\n    );\r\n    // Disabling since we're using this only to recalculate.\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [fives, tens, skips, wilds]);\r\n\r\n  const checkboxId = `phase-complete-${playerId}`;\r\n\r\n  return (\r\n    <div className=\"ScoreCard-container\">\r\n      <div key={`ScoreCard-player-${playerId}`} className=\"ScoreCard-player\">\r\n        <span>{name || `Player ${playerId}`}</span>\r\n        <div>\r\n          <label htmlFor={checkboxId}>Completed Phase?</label>\r\n          <input\r\n            id={checkboxId}\r\n            type=\"checkbox\"\r\n            checked={completedPhase}\r\n            onChange={(e) => {\r\n              const { checked } = e.target;\r\n              actions?.adjustPhase(playerId, checked ? 1 : -1);\r\n              setCompletedPhase(checked);\r\n            }}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n\r\n      <ScoreSlider\r\n        label=\"Cards 1-9\"\r\n        rangeValue={fives}\r\n        setRangeValueCb={(x) => {\r\n          setFives(x);\r\n        }}\r\n      />\r\n\r\n      <ScoreSlider\r\n        label=\"Cards 10-12\"\r\n        rangeValue={tens}\r\n        setRangeValueCb={(x) => {\r\n          setTens(x);\r\n        }}\r\n      />\r\n\r\n      <ScoreSlider\r\n        label=\"Skips\"\r\n        rangeValue={skips}\r\n        setRangeValueCb={(x) => {\r\n          setSkips(x);\r\n        }}\r\n      />\r\n\r\n      <ScoreSlider\r\n        label=\"Wilds\"\r\n        rangeValue={wilds}\r\n        setRangeValueCb={(x) => {\r\n          setWilds(x);\r\n        }}\r\n      />\r\n\r\n      <span>Round score: {stagedScoreAdjustment}</span>\r\n    </div>\r\n  );\r\n};\r\nexport const Scoring: React.FC = () => {\r\n  const [{ players }, actions] = useContext(EngineContext);\r\n\r\n  return (\r\n    <div className=\"ScoreCards-container\">\r\n      {players.map((p) => (\r\n        <ScoreCard key={`ScoreCard-${p.playerId}`} player={p} />\r\n      ))}\r\n\r\n      <button\r\n        style={{ marginTop: 10 }}\r\n        onClick={(e) => {\r\n          actions?.commitScores();\r\n          actions?.saveState();\r\n        }}\r\n      >\r\n        Continue\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport { EngineContext } from \"../state/EngineContext\";\r\nimport { EndScreen } from \"./EndScreen\";\r\nimport { GameSetup } from \"./GameSetup\";\r\nimport { RoundInProgress } from \"./RoundInProgress\";\r\nimport { Scoring } from \"./Scoring\";\r\n\r\nexport const Game: React.FC = () => {\r\n  const [state] = useContext(EngineContext);\r\n\r\n  const scene = (function () {\r\n    switch (state.gameState) {\r\n      case \"init\":\r\n        return <GameSetup />;\r\n      case \"active\":\r\n        return state.isRoundInProgress ? <RoundInProgress /> : <Scoring />;\r\n      case \"complete\":\r\n        return <EndScreen />;\r\n    }\r\n  })();\r\n\r\n  return <div className=\"Game-view\">{scene}</div>;\r\n};\r\n","import \"./App.css\";\r\n\r\nimport React from \"react\";\r\n\r\nimport { Game } from \"./components/Game\";\r\nimport { EngineProvider } from \"./state/EngineContext\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <img\r\n            className=\"Phasekeeper-logo\"\r\n            src=\"/logo512-transparent.png\"\r\n            alt=\"Phasekeeper logo\"\r\n          />\r\n          <h4>Phasekeeper</h4>\r\n        </div>\r\n      </header>\r\n      <div className=\"App-main\">\r\n        <EngineProvider>\r\n          <Game />\r\n        </EngineProvider>\r\n      </div>\r\n      <footer className=\"App-footer\">\r\n        <div className=\"App-footer-install-hint\">\r\n          Consider using \"Add to Home Screen\" to install this free application\r\n          instead of bookmarking the site in your browser!\r\n        </div>\r\n        <div className=\"App-report-issues-info\">\r\n          To review known issues or report new ones, come see us on{\" \"}\r\n          <a\r\n            href=\"https://github.com/druttka/phasekeeper/issues\"\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            GitHub\r\n          </a>\r\n          !\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}